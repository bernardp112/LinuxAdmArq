#!/bin/bash
interrupcao() {
    printf "\nVocê pressionou Ctrl+C. Para sair do script, use a opção 'Finalizar o programa' no menu."
}
# Definindo a função 'interrupcao' para lidar com o sinal SIGINT
trap interrupcao SIGINT
mkdir -p ./arquivos
mkdir -p ./arquivos/simples
mkdir -p ./arquivos/extraidos
mkdir -p ./arquivos/restaurados
mkdir -p ./arqComp
mkdir -p ./arqBack
# Função para exibir o cabeçalho inicial
exibir_cabecalho() {
        clear 
        HORA=$(date +%m)
        if [ $HORA -ge 01 ] && [ $HORA -lt 07 ]; then
                N="1"
        else
                N="2"
        fi
        printf "#################################################################
# IBMEC\t\t\t\t\t\t\t\t#
# Sistemas Operacionais\t\t\t  Semestre %s de %s\t#
# Código: IBM8940\t\t\t  Turma: 8001\t\t#
# Professor: Luiz Fernando T. de Farias\t\t\t\t#
#---------------------------------------------------------------#
# Equipe Desenvolvedora:\t\t\t\t\t#
#\tAluno: Breno Huf\t\t\t\t\t#
#\tAluno: Bernardo de Souza Silva\t\t\t\t\t#
#---------------------------------------------------------------#
# Rio de Janeiro, %s de %s de %s\t\t\t\t#
# Hora do Sistema: %s Horas e %s minutos\t\t\t#
#################################################################

Menu de Escolhas:
    \t1) Manipulação de arquivo (Escrever, Ler, Remover, Criar)
    \t2) Compactar e Extrair arquivo
    \t3) Backup arquivo
    \t4) Restaurar arquivo
    \t5) Finalizar o programa.

" "$(echo "$N")" "$(date +%Y)" "$(date +%d)" "$(date +%B)" "$(date +%Y)" "$(date +%H)" "$(date +%M)"
}
listar_e_escolher_diretorio() {
        echo "Diretórios disponíveis:"
        i=1
        for diretorio in ./arquivos/*; do
                echo "$i) $(basename "$diretorio")"
                ((i++))
        done
        echo "Escolha o número correspondente ao diretório:"
        read num_diretorio
        diretorio=$(ls -d ./arquivos/*/ | sed -n "${num_diretorio}p")
        if [ -z "$diretorio" ]; then
                echo "Diretório não encontrado/existe."
                return 1
        fi
        cd "$diretorio" || return 1
}
listar_e_escolher_arquivo() {
    echo "Arquivos disponíveis para manipulação:"
    i=1
    for arquivo in *; do
        echo "$i) $(basename "$arquivo")"
        ((i++))
    done
    echo "Digite o número correspondente ao arquivo:"
    read num_arquivo
    arquivo=$(ls | sed -n "${num_arquivo}p")
    if [ -z "$arquivo" ]; then
        echo "Arquivo não encontrado/existe."
        return 1
    fi
}
# Função para manipulação de arquivos
manipular_arquivo() {
        echo "Escolha a operação (1-Escrever 2-Ler 3-Remover 4-Criar): "
        read opcao
        case $opcao in
                1)
                        listar_e_escolher_diretorio || return
                        listar_e_escolher_arquivo
                        if [ -f "$arquivo" ]; then
                                echo "Digite o texto para escrever no arquivo:"
                        read texto
                                echo "$texto" > "$arquivo"
                                echo "Texto escrito com sucesso!"
                        else
                                echo "O arquivo não existe."
                        fi
                        cd ../..
                        ;;    
                2)
                        listar_e_escolher_diretorio || return
                        listar_e_escolher_arquivo
                        if [ -f "$arquivo" ]; then
                                cat "$arquivo"
                        else
                                echo "O arquivo não existe."
                        fi
                        cd ../..
                        ;;
                3)
                        listar_e_escolher_diretorio || return
                        listar_e_escolher_arquivo
                        if [ -f "$arquivo" ]; then
                                rm "$arquivo"
                                echo "Arquivo removido com sucesso!"
                        else
                                echo "O arquivo não existe."
                        fi
                        cd ../..
                        ;;
                4)
                        echo "Digite o nome do arquivo:"
                        read arquivo     
                        touch "./arquivos/simples/$arquivo"
                        echo "Arquivo criado com sucesso!"
                        ;;
                *)
                        echo "Opção inválida!"
                        ;;
        esac
}
exibir_cabecalho
while true; do
        echo -n "Selecione uma opção:"
        read L
        if [ -z "$L" ]; then
                continue
        fi
        case $L in
                1)
                        manipular_arquivo
                        ;;
                2)
                        echo "Escolha a operação (1-Compactar 2-Extrair): "
                        read opcao
                        case $opcao in
                                1)
                                        listar_e_escolher_diretorio || return
                                        listar_e_escolher_arquivo
                                        tar -czvf "../../arqComp/$arquivo.tar.gz" "$arquivo"
                                        echo "Arquivo compactado com sucesso!"
                                        cd ../..
                                        ;;
                                2)
                                        echo "Arquivos disponíveis para extração:"
                                        i=1
                                        for arquivo in arqComp/*.tar.gz; do
                                                echo "$i) $(basename "$arquivo")"
                                                ((i++))
                                        done
                                        echo "Digite o número correspondente ao arquivo compactado:"
                                        read num_arquivo
                                        arquivo=$(ls arqComp/*.tar.gz | sed -n "${num_arquivo}p")
                                        if [ -z "$arquivo" ]; then
                                                echo "Arquivo não encontrado/existe."
                                                continue
                                        fi
                                        tar -xzvf "$arquivo" -C ./arquivos/extraidos/
                                        echo "Arquivo extraído com sucesso!"
                                        ;;
                                *)
                                        echo "Opção inválida!"
                                        ;;
                        esac
                        ;;
                3)
                        listar_e_escolher_diretorio || return
                        listar_e_escolher_arquivo
                        cp "$arquivo" "../../arqBack/$arquivo.bak"
                        echo "Backup realizado com sucesso!"
                        cd ../..
                        ;;
                4)
                        echo "Arquivos disponíveis para restauração:"
                        i=1
                        for arquivo in arqBack/*.bak; do
                                echo "$i) $(basename "$arquivo")"
                                ((i++))
                        done
                        echo "Digite o número correspondente ao arquivo compactado:"
                        read num_arquivo
                        arquivo=$(ls arqBack/*.bak | sed -n "${num_arquivo}p")
                        if [ -z "$arquivo" ]; then
                                echo "Arquivo não encontrado/existe."
                                continue
                        fi
                        cp "$arquivo" "./arquivos/restaurados/"
                        echo "Arquivo extraído com sucesso!"
                        ;;
                5)
                        echo "Encerrando o programa."
                        rm -r ./arquivos
                        rm -r ./arqComp
                        rm -r ./arqBack
                        exit 0
                        ;;
                *)
                        echo "Opção inválida!"
                        ;;
        esac
# Pausa para retornar ao cabeçalho inicial
read -p "Pressione Enter para retornar ao cabeçalho inicial..."
exibir_cabecalho
done
